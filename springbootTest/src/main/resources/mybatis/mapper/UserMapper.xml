<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="douguo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="douguo.model.User">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="registertime" property="registerTime" jdbcType="DATE"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
    </resultMap>



    <select id="getCount" resultType="Integer">
        SELECT COUNT(*) FROM users
    </select>


    <select id="selectUserByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
     select * from user where mobile=#{mobile}
    </select>

    <select id="login" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from user where mobile=#{mobile} and password=#{password}
    </select>

    <insert id="register" parameterType="douguo.model.User">
     insert into user(username,nickname,password,sex,mobile,email,registertime,role,image)
                 values(#{username},#{nickname},#{password},#{sex},#{mobile},#{email},#{registerTime},#{role},#{image})
    </insert>

    <update id="update" parameterType="douguo.model.User">
        UPDATE
        users
        SET
        <if test="userName != null">userName = #{userName},</if>
        <if test="passWord != null">passWord = #{passWord},</if>
        nick_name = #{nickName}
        WHERE
        id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM
        users
        WHERE
        id =#{id}
    </delete>

</mapper>